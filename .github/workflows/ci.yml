name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
env:
  BRANCH_NAME: ${{ github.ref_name }}

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    env:
      # CI uses temporary PostgreSQL service
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      DATABASE_PROVIDER: ${{ vars.DATABASE_PROVIDER }}
      DIRECT_URL:  ${{ secrets.DIRECT_URL }}
      # Authentication for CI
      BETTER_AUTH_SECRET: ${{ secrets.BETTER_AUTH_SECRET }}
      BETTER_AUTH_URL: ${{ secrets.BETTER_AUTH_URL }}
      # Email configuration from repository variables
      EMAIL_FROM: ${{ vars.EMAIL_FROM }}
      SEND_ACTUAL_EMAIL: ${{ vars.SEND_ACTUAL_EMAIL }}
      # Use test API key or disable email for CI
      RESEND_API_KEY: ${{ secrets.RESEND_API_KEY || 'test-key' }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10

      - name: Install dependencies
        run: pnpm install

      - name: Setup database for CI
        run: pnpm db:ci

      - name: Run TypeScript type checking
        run: pnpm typecheck

      - name: Run ESLint
        run: pnpm lint

      - name: Run tests
        run: pnpm test

      - name: Build application
        run: pnpm build

